version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: videoflix
      POSTGRES_USER: martin
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn videoflix_backend.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
      - static-data:/usr/src/app/staticfiles
      - media-data:/usr/src/app/media
    depends_on:
      - db
    environment:
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    volumes:
      - static-data:/usr/src/app/staticfiles
      - media-data:/usr/src/app/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    # environment:
    #   - REDIS_PASSWORD="${REDIS_PASSWORD}"
    # command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  rq-worker:
    build:
      context: ./rq-worker
      dockerfile: Dockerfile
    command: python manage.py rqworker default
    volumes:
      - .:/usr/src/app
      - media-data:/usr/src/app/media
    depends_on:
      - redis
    environment:
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"

  certbot:
    image: certbot/certbot
    volumes:
    - ./data/certbot/conf:/etc/letsencrypt
    - ./data/certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'


volumes:
  postgres-data:
  static-data:
  media-data:

